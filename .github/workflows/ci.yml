name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SCHEME_NAME: 'createexpoapp' # App's Xcode scheme name

jobs:
  android_build:
    name: Android build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install npm packages
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Generate Android project
        run: npx expo prebuild --platform android --clean

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4 # speeds up build by caching

      - name: Gradle build
        run: cd android && chmod +x gradlew && ./gradlew :app:assembleRelease -PreactNativeArchitectures=arm64-v8a --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android_build_release
          path: ${{ github.workspace }}/android/app/build/outputs/apk/release/*.apk

  ios_build:
    name: iOS build
    runs-on: macos-15
    needs: android_build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install npm packages
        run: npm ci

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: latest-stable

      - name: Generate iOS project
        run: npx expo prebuild --platform ios --clean

      - name: Cache Xcode build
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ./ios/build
          key: ${{ runner.os }}-xcode-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-xcode-build-

      - name: Xcode project build
        run: >
          xcodebuild archive
          -workspace "${{ env.SCHEME_NAME }}.xcworkspace"
          -scheme "${{ env.SCHEME_NAME }}"
          -configuration Release
          -destination "platform=iOS Simulator,arch=arm64,name=iPhone 16"
          -archivePath "build/${{ env.SCHEME_NAME }}.xcarchive"
          CODE_SIGN_IDENTITY=""
          CODE_SIGNING_REQUIRED=NO
          CODE_SIGNING_ALLOWED=NO | xcpretty && exit ${PIPESTATUS[0]}
        working-directory: ios

      # - name: Xcode export archive
      #   run: >
      #     xcodebuild -exportArchive \
      #     -archivePath "build/${{ env.SCHEME_NAME }}.xcarchive"
      #     -exportPath "build/ipa"
      #     -exportOptionsPlist "exportOptions.plist"

      # - name: Upload IPA artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ios_build_release
      #     path: ${{ github.workspace }}/ios/build/*.ipa
